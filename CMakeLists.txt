cmake_minimum_required(VERSION 3.8)
project(Dropbox)

include(CheckCXXCompilerFlag)
function(enable_cxx_compiler_flag_if_supported flag)
    string(FIND "${CMAKE_CXX_FLAGS}" "${flag}" flag_already_set)
    if(flag_already_set EQUAL -1)
        check_cxx_compiler_flag("${flag}" flag_supported)
        if(flag_supported)
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${flag}" PARENT_SCOPE)
        endif()
        unset(flag_supported CACHE)
    endif()
endfunction()

enable_cxx_compiler_flag_if_supported("-Wall")
#only for debugging
enable_cxx_compiler_flag_if_supported("-ggdb3")
enable_cxx_compiler_flag_if_supported("-O0")
#
set(SOURCE_FILES TcpSocket.cpp server/TcpServer.cpp Descriptor.cpp POSIXError.cpp POSIXError.h
        InotifyInterface/Inotify.cpp InotifyInterface/Notifier.cpp InotifyInterface/EventType.cpp
        Dropbox.h Dropbox.cpp SafeQueue.h )
set(SERVER_SOURCE_FILES ${SOURCE_FILES} server/DropboxServer.cpp server/DropboxServer.h)
set(CLIENT_SOURCE_FILES ${SOURCE_FILES} client/DropboxClient.cpp client/DropboxClient.h client/ClientEventReporter.h client/ClientEventReporter.cpp SafeSet.h)
set(CMAKE_CXX_STANDARD 17)
set(Boost_USE_STATIC_LIBS OFF)
set(Boost_USE_MULTITHREADED ON)
set(Boost_USE_STATIC_RUNTIME OFF)
find_package(Boost 1.58.0 COMPONENTS system filesystem)
find_package(Threads)
if (Boost_FOUND)
    include_directories(${Boost_INCLUDE_DIRS})
    add_executable(server.o ${SERVER_SOURCE_FILES} server/server.cpp)
    add_executable(client.o ${CLIENT_SOURCE_FILES} client/client.cpp)
    add_executable(client2.o ${CLIENT_SOURCE_FILES} client/client.cpp)
    target_link_libraries(server.o ${Boost_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
    target_link_libraries(client.o ${Boost_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
    target_link_libraries(client2.o ${Boost_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
endif ()
